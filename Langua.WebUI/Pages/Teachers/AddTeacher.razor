@page "/AddTeacher"
@using Langua.Models
@inherits AddTeacherComonent
<PageTitle>Add Candidate</PageTitle>
<div class="px-2">

    @* <EditForm Model="@teacher" OnValidSubmit="@HandleValidSubmit"> *@
        <RadzenTemplateForm Data="@teacher" TItem="Teacher" Submit="HandleValidSubmit">
        <div class="text-danger">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @if (Errors.Count() > 0)
            {
                <ul>

                    @foreach (var error in Errors)
                    {
                        <li>@error</li>
                    }
                </ul>
            }
        </div>
        

        <div class="row">
            <div class="form-group mb-1 col-md-6">
                <div class="form-group mb-3">
                    <label for="Photo">@L["Photo"] :</label>
                    <RadzenFileInput id="teacher" @bind-Value="teacher.Photo" class="form-control" />
                        Change=@(args => OnChange(args, "FileInput")) Error=@(args => OnError(args, "FileInput")) InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})" />

                </div>
                <div class="form-group mb-3">
                    <label for="Photo">@L["Department"] :</label>
                    <RadzenDropDown Data="@Departements" AllowClear="true" AllowFiltering=true @bind-Value="teacher.DepartementId" ValueProperty="Id" TextProperty="Name" Name="DepUc" class="w-100" />
                    <RadzenRequiredValidator Component="DepUc" Popup=true Text="@L["This filed is required"]" />
                </div>
            </div>
            <div class="col-md-6 my-auto">
                <div class="form-group mb-3 ">
                    <label for="FullName">@L["Full Name"] :</label>
                    <RadzenTextBox id="FullName" @bind-Value="teacher.FullName" class="form-control" Name="FullName" />
                    <RadzenRequiredValidator Component="FullName" Text="@L["The Filed is Required"]" />
                </div>

                <div class="form-group mb-3 ">
                    <label for="Phone">@L["Phone"] :</label>
                    <RadzenTextBox id="Phone" @bind-Value="teacher.Phone" class="form-control" Name="Phone" />
                    <RadzenRequiredValidator Component="Phone" Text="@L["The Filed is Required"]" />
                </div>
            </div>
        </div>

        <div class="form-group mb-3">
            <label for="Email">@L["Email"] :</label>
            <RadzenTextBox Name="Email" id="Email" @bind-Value="teacher.Email" class="form-control" AutoComplete="false" />
            <RadzenRequiredValidator Component="Email" Text="@L["The Field is required"]" />
        </div>

        <div class="mx-auto mt-2 text-center">
            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="@L["Save"]" ButtonStyle="ButtonStyle.Primary" class="px-5">
            </RadzenButton>
            <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="close" style="margin-left: 1rem" Text="@L["Cancel"]" Click="@(()=>Close())" class="px-5">
            </RadzenButton>
            <RadzenButton ButtonType="ButtonType.Reset" ButtonStyle="ButtonStyle.Danger" style="margin-left: 1rem" Icon="reset" Text="@L["Reset"]" class="px-5" />
        </div>
    </RadzenTemplateForm>
</div>

@code{

    string fileName;
    long? fileSize;
    void OnChange(string value, string name)
    {
        
    }

    void OnError(UploadErrorEventArgs args, string name)
    {
        Notify(L["Error"], args.Message, NotificationSeverity.Error);
    }
}